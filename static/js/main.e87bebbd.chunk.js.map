{"version":3,"sources":["assets/images/goat.png","assets/images/logo.png","assets/images/logo-white.png","serviceWorker.js","utils/storage/withStorage.js","components/navigation/utils/index.js","utils/navigation/index.js","components/navigation/Nav.jsx","components/navigation/Header.jsx","configs/routes/Loading.jsx","configs/routes/index.js","routes/navigation.js","routes/headerRoutes.js","routes/index.jsx","index.js"],"names":["module","exports","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Component","menu","links","type","history","map","link","Item","key","onClick","push","path","icon","name","activeRoute","find","split","Sider","Layout","Nav","theme","selectedKey","current","useLocation","pathname","useHistory","breakpoint","sm","collapsible","width","style","background","defaultSelectedKeys","e","selectedKeys","height","borderRight","mode","AntHeader","Header","changeTheme","className","src","logoWhite","logo","alt","lineHeight","float","checked","onChange","checkedChildren","unCheckedChildren","antIcon","fontSize","spin","size","indicator","options","fallback","Loading","Content","Home","loadable","About","Books","Contact","Booking","Book","Profile","withStorage","ls","useState","getItem","setTheme","undefined","setKey","value","setItem","headerRoutes","routes","padding","margin","minHeight","exact","props","setLs","useEffect","localStorage","Error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e87bebbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goat.1a6ed656.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.1969cc77.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-white.074df53a.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../../configs/routes/Loading\";\n\nexport const withStorage = Component => props => {\n  const [ls, setLs] = useState(undefined);\n\n  useEffect(() => {\n    if (!localStorage) {\n      throw Error(\"Local Storage not accessable\");\n    } else {\n      setLs(localStorage);\n    }\n  }, []);\n\n  return ls ? <Component ls={ls} {...props} /> : <Loading />;\n};\n","import React from \"react\";\nimport { Menu, Icon } from \"antd\";\n\nexport const menu = (links, type = \"sidebar\", history) =>\n  links.map(link => (\n    <Menu.Item key={link.key} onClick={() => history.push(link.path)}>\n      {link.icon && type === \"sidebar\" && <Icon type={link.icon} />}\n      <span>{link.name}</span>\n    </Menu.Item>\n  ));\n","export const activeRoute = (links, path) => {\n  const link = links.find(link => link.path === `/${path.split(\"/\")[1]}`);\n  return link ? link.key : \"\";\n};\n","import React from \"react\";\nimport { Menu, Layout } from \"antd\";\nimport { menu } from \"./utils\";\nimport { activeRoute } from \"../../utils/navigation\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst { Sider } = Layout;\n\nexport const Nav = ({ theme, links, onClick, selectedKey }) => {\n  const current = activeRoute(links, useLocation().pathname);\n  const history = useHistory();\n\n  return (\n    <Sider\n      breakpoint={{ sm: 2 }}\n      collapsible\n      width={200}\n      style={{ background: \"#fff\" }}\n    >\n      <Menu\n        theme={theme}\n        defaultSelectedKeys={[current]}\n        onClick={e => {\n          onClick(e.key);\n        }}\n        selectedKeys={[selectedKey || current]}\n        style={{ height: \"100%\", borderRight: 0 }}\n        mode=\"inline\"\n      >\n        {menu(links, \"sidebar\", history)}\n      </Menu>\n    </Sider>\n  );\n};\n","import React from \"react\";\nimport { menu } from \"./utils\";\nimport { Menu, Layout, Switch } from \"antd\";\nimport { logo, logoWhite } from \"../../assets/images\";\nimport { activeRoute } from \"../../utils/navigation\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nconst { Header: AntHeader } = Layout;\n\nexport const Header = ({ theme, changeTheme, selectedKey, onClick, links }) => {\n  const current = activeRoute(links, useLocation().pathname);\n  const history = useHistory();\n\n  return (\n    <AntHeader className={\"header \" + theme}>\n      <div className=\"logo\">\n        <img\n          src={theme === \"light\" ? logoWhite : logo}\n          width=\"120\"\n          alt=\"logo\"\n        />\n      </div>\n      <Menu\n        theme={theme}\n        mode=\"horizontal\"\n        onClick={e => {\n          onClick(e.key);\n        }}\n        defaultSelectedKeys={[current]}\n        selectedKeys={[selectedKey || current]}\n        style={{ lineHeight: \"64px\", float: \"right\" }}\n      >\n        {menu(links, \"header\", history)}\n        <Menu.Item key=\"4\">\n          <Switch\n            checked={theme === \"dark\"}\n            onChange={changeTheme}\n            checkedChildren=\"Dark\"\n            unCheckedChildren=\"Light\"\n          />\n        </Menu.Item>\n      </Menu>\n    </AntHeader>\n  );\n};\n","import React from \"react\";\nimport { Spin, Icon } from \"antd\";\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 70 }} spin />;\n\nexport default () => (\n  <div className=\"loader\">\n    <Spin size=\"large\" indicator={antIcon} />\n  </div>\n);\n","import React from \"react\";\nimport Loading from \"./Loading\";\n\nexport const options = {\n  fallback: <Loading />\n};\n","export default [\n  {\n    icon: \"pie-chart\",\n    key: \"menu-1\",\n    path: \"/\",\n    name: \"Home\"\n  },\n  {\n    icon: \"folder-open\",\n    key: \"menu-4\",\n    path: \"/books\",\n    name: \"Books\"\n  },\n  {\n    icon: \"file\",\n    key: \"menu-5\",\n    path: \"/booking\",\n    name: \"Booking\"\n  },\n  {\n    icon: \"desktop\",\n    key: \"menu-2\",\n    path: \"/contact\",\n    name: \"Contact\"\n  },\n  {\n    icon: \"user\",\n    key: \"menu-3\",\n    path: \"/about\",\n    name: \"About\"\n  }\n];\n","export default [\n  {\n    icon: \"pie-chart\",\n    key: \"menu-7\",\n    path: \"/profile\",\n    name: \"Profile\"\n  }\n];\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Header, Nav } from \"../components\";\nimport { options } from \"../configs/routes\";\nimport loadable from \"@loadable/component\";\nimport { Layout } from \"antd\";\nimport React, { useState } from \"react\";\nimport routes from \"./navigation\";\nimport headerRoutes from \"./headerRoutes\";\nimport { withStorage } from \"../utils/storage/withStorage\";\n\nconst { Content } = Layout;\nconst Home = loadable(() => import(\"./Home\"), options);\nconst About = loadable(() => import(\"./About\"), options);\nconst Books = loadable(() => import(\"./Books\"), options);\nconst Contact = loadable(() => import(\"./Contact\"), options);\nconst Booking = loadable(() => import(\"./Booking\"), options);\nconst Book = loadable(() => import(\"./Book\"), options);\nconst Profile = loadable(() => import(\"./Profile\"), options);\n\nexport default withStorage(({ ls }) => {\n  const [theme, setTheme] = useState(ls.getItem(\"theme\"));\n  const [selectedKey, setKey] = useState(undefined);\n\n  const changeTheme = value => {\n    const theme = value ? \"dark\" : \"light\";\n    setTheme(theme);\n    ls.setItem(\"theme\", theme);\n  };\n\n  const onClick = key => {\n    setKey(key);\n  };\n\n  return (\n    <Router>\n      <Layout>\n        <Header\n          selectedKey={selectedKey}\n          onClick={onClick}\n          links={headerRoutes}\n          theme={theme}\n          changeTheme={changeTheme}\n        />\n        <Layout>\n          <Nav\n            selectedKey={selectedKey}\n            onClick={onClick}\n            theme={theme}\n            changeTheme={changeTheme}\n            links={routes}\n          />\n          <Layout style={{ padding: \"24px 24px\" }}>\n            <Content\n              style={{\n                background: \"#fff\",\n                padding: 24,\n                margin: 0,\n                minHeight: 280\n              }}\n            >\n              <Switch>\n                <Route exact path=\"/\">\n                  <Home />\n                </Route>\n                <Route exact path=\"/about\">\n                  <About />\n                </Route>\n                <Route exact path=\"/contact\">\n                  <Contact />\n                </Route>\n                <Route exact path=\"/books\">\n                  <Books />\n                </Route>\n                <Route exact path=\"/booking\">\n                  <Booking />\n                </Route>\n                <Route exact path=\"/book/:id\">\n                  <Book />\n                </Route>\n                <Route exact path=\"/profile\">\n                  <Profile />\n                </Route>\n              </Switch>\n            </Content>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n});\n","import * as serviceWorker from \"./serviceWorker\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport App from \"./routes\";\n\nimport React from \"react\";\nimport \"./index.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.register();\n"],"sourceRoot":""}