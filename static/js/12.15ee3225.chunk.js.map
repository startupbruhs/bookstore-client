{"version":3,"sources":["utils/openNotification.js","components/generic/TextInput.jsx","components/generic/TextArea.jsx","routes/Contact.jsx"],"names":["openNotification","type","message","description","notification","TextInput","styled","AntInput","StyledLabel","label","Error","div","Input","props","useField","field","meta","htmlFor","id","name","touched","error","TextArea","AntArea","Area","rows","className","Row","AntRow","contactFormValidator","Yup","email","required","max","Contact","initialValues","validationSchema","onSubmit","values","setSubmitting","setTimeout","JSON","stringify","placeholder","htmlType"],"mappings":"6HAAA,aASeA,IAPU,SAACC,EAAMC,EAASC,GACvCC,IAAaH,GAAM,CACjBC,QAASA,EACTC,YAAaA,M,ycCAjB,IAAME,EAAYC,YAAOC,IAAPD,CAAH,KAITE,EAAcF,IAAOG,MAAV,KAIXC,EAAQJ,IAAOK,IAAV,KAiBIC,EAXD,SAAC,GAAyB,IAAvBH,EAAsB,EAAtBA,MAAUI,EAAY,2BACfC,YAASD,GADM,mBAC9BE,EAD8B,KACvBC,EADuB,KAErC,OACE,oCACE,kBAACR,EAAD,CAAaS,QAASJ,EAAMK,IAAML,EAAMM,MAAOV,GADjD,IACsE,6BACpE,kBAACJ,EAAD,iBAAeU,EAAWF,IACzBG,EAAKI,SAAWJ,EAAKK,MAAQ,kBAACX,EAAD,KAAQM,EAAKK,OAAiB,O,wTCpB1DC,EAAaf,IAAbe,SAEFC,EAAUjB,YAAOgB,EAAPhB,CAAH,KAIPE,EAAcF,IAAOG,MAAV,KAIXC,EAAQJ,IAAOK,IAAV,KAmBIa,EAbF,SAAC,GAAyB,IAAvBf,EAAsB,EAAtBA,MAAUI,EAAY,2BACdC,YAASD,GADK,mBAC7BE,EAD6B,KACtBC,EADsB,KAEpC,OACE,oCACE,kBAAC,EAAD,CAAaC,QAASJ,EAAMK,IAAML,EAAMM,MAAOV,GADjD,IACsE,6BACpE,kBAACc,EAAD,eAASE,KAAM,EAAGC,UAAU,cAAiBX,EAAWF,IACvDG,EAAKI,SAAWJ,EAAKK,MACpB,kBAAC,EAAD,CAAOK,UAAU,SAASV,EAAKK,OAC7B,O,4FCpBV,IAAMM,EAAMrB,YAAOsB,IAAPtB,CAAH,KAIHuB,EAAuBC,SAAW,CACtCC,MAAOD,WACJC,MAAM,yBACNC,SAAS,YACZ7B,YAAa2B,WACVG,IAAI,IAAK,kCACTD,SAAS,cAiDCE,UA9CC,WACd,OACE,oCACE,2CACA,kBAAC,IAAD,CACEC,cAAe,CAAEJ,MAAO,GAAI5B,YAAa,IACzCiC,iBAAkBP,EAClBQ,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WACTxC,YACE,UACA,YACAyC,KAAKC,UAAUJ,EAAQ,KAAM,IAE/BC,GAAc,KACb,OAGL,kBAAC,IAAD,KACE,kBAACZ,EAAD,KACE,kBAAC,EAAD,CACElB,MAAM,QACNU,KAAK,QACLlB,KAAK,QACL0C,YAAY,kBAGhB,kBAAChB,EAAD,KACE,kBAAC,EAAD,CACElB,MAAM,iBACNU,KAAK,cACLlB,KAAK,OACL0C,YAAY,sBAGhB,kBAAChB,EAAD,KACE,kBAAC,IAAD,CAAQ1B,KAAK,UAAU2C,SAAS,UAAhC","file":"static/js/12.15ee3225.chunk.js","sourcesContent":["import { notification } from \"antd\";\n\nconst openNotification = (type, message, description) => {\n  notification[type]({\n    message: message,\n    description: description\n  });\n};\n\nexport default openNotification;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useField } from \"formik\";\nimport { Input as AntInput } from \"antd\";\n\nconst TextInput = styled(AntInput)`\n  width: 40%;\n`;\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst Error = styled.div`\n  font-size: 12px;\n  color: red;\n  margin-top: 0.25rem;\n`;\n\nconst Input = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel> <br />\n      <TextInput {...field} {...props} />\n      {meta.touched && meta.error ? <Error>{meta.error}</Error> : null}\n    </>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useField } from \"formik\";\nimport { Input as AntInput } from \"antd\";\n\nconst { TextArea } = AntInput;\n\nconst AntArea = styled(TextArea)`\n  width: 40%;\n`;\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst Error = styled.div`\n  font-size: 12px;\n  color: red;\n  margin-top: 0.25rem;\n`;\n\nconst Area = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel> <br />\n      <AntArea rows={4} className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Error className=\"error\">{meta.error}</Error>\n      ) : null}\n    </>\n  );\n};\n\nexport default Area;\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Row as AntRow, Button } from \"antd\";\nimport styled from \"styled-components\";\nimport openNotification from \"../utils/openNotification\";\nimport Input from \"../components/generic/TextInput\";\nimport Area from \"../components/generic/TextArea\";\n\nconst Row = styled(AntRow)`\n  margin: 10px 0px;\n`;\n\nconst contactFormValidator = Yup.object({\n  email: Yup.string()\n    .email(\"Invalid email address\")\n    .required(\"Required\"),\n  description: Yup.string()\n    .max(200, \"Must be 200 characters or less\")\n    .required(\"Required\")\n});\n\nconst Contact = () => {\n  return (\n    <>\n      <h1> Contact us</h1>\n      <Formik\n        initialValues={{ email: \"\", description: \"\" }}\n        validationSchema={contactFormValidator}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            openNotification(\n              \"success\",\n              \"Submitted\",\n              JSON.stringify(values, null, 2)\n            );\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        <Form>\n          <Row>\n            <Input\n              label=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              placeholder=\"Your email ?\"\n            />\n          </Row>\n          <Row>\n            <Area\n              label=\"Your thoughts?\"\n              name=\"description\"\n              type=\"text\"\n              placeholder=\"Express yourself\"\n            />\n          </Row>\n          <Row>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Row>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default Contact;\n"],"sourceRoot":""}